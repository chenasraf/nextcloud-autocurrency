# This workflow is provided via the organization template repository
#
# https://github.com/nextcloud/.github
# https://docs.github.com/en/actions/learn-github-actions/sharing-workflows-with-your-organization
#
# Use lint-eslint together with lint-eslint-when-unrelated to make eslint a required check for GitHub actions
# https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/troubleshooting-required-status-checks#handling-skipped-but-required-checks

name: Lint eslint

on:
  - pull_request
  - push

permissions:
  contents: read

concurrency:
  group: lint-eslint-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest

    outputs:
      src: ${{ steps.changes.outputs.src}}

    steps:
      - uses: dorny/paths-filter@v3
        id: changes
        continue-on-error: true
        with:
          filters: |
            src:
              - '.github/workflows/**'
              - 'src/**'
              - 'appinfo/info.xml'
              - 'package.json'
              - 'package-lock.json'
              - 'tsconfig.json'
              - '.eslintrc.*'
              - '.eslintignore'
              - '**.js'
              - '**.ts'
              - '**.vue'

  lint:
    runs-on: ubuntu-latest

    needs: changes
    if: needs.changes.outputs.src != 'false'

    name: NPM lint

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        env:
          CYPRESS_INSTALL_BINARY: 0
          PUPPETEER_SKIP_DOWNLOAD: true
        run: |
          npm i -g pnpm
          pnpm i --frozen-lockfile

      - name: Lint
        run: pnpm lint

  summary:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [changes, lint]

    if: always()

    # This is the summary, we just avoid to rename it so that branch protection rules still match
    name: eslint

    steps:
      - name: Summary status
        run: if ${{ needs.changes.outputs.src != 'false' && needs.lint.result != 'success' }}; then exit 1; fi

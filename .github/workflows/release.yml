# This workflow is provided via the organization template repository
#
# https://github.com/nextcloud/.github
# https://docs.github.com/en/actions/learn-github-actions/sharing-workflows-with-your-organization

name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read

concurrency:
  group: lint-php-cs-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    name: Prepare Release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get php version
        id: versions
        uses: icewind1991/nextcloud-version-matrix@v1

      - name: Set up php${{ steps.versions.outputs.php-available }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ steps.versions.outputs.php-available }}
          extensions: bz2, ctype, curl, dom, fileinfo, gd, iconv, intl, json, libxml, mbstring, openssl, pcntl, posix, session, simplexml, xmlreader, xmlwriter, zip, zlib, sqlite, pdo_sqlite
          coverage: none
          ini-file: development
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build App
        run: |
          npm i -g pnpm
          make && make appstore

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: autocurrency.tar.gz
          path: build/artifacts/appstore/nextcloud-autocurrency.tar.gz

  changelog:
    name: Update Changelog

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Release Tags
        run: |
          LAST_VERSION=$(git tag --sort=version:refname | head -n 1)
          LAST_VERSION="${LAST_VERSION#v}"
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v}"
          echo VERSION=${VERSION} >> $GITHUB_ENV
          echo LAST_VERSION=${LAST_VERSION} >> $GITHUB_ENV

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
          base-ref: ${{ env.LAST_VERSION }}

      - name: Write Changelog
        run: |
          LAST_VERSION="${{ env.LAST_VERSION }}"
          VERSION="${{ env.VERSION }}"
          cat >chlog.tmp << 'EOF'
          ${{ steps.changelog.outputs.changelog }}
          EOF
          chlg="$(cat chlog.tmp)"
          chlg="## [v$VERSION ($(date +%Y-%m-%d))](https://github.com/chenasraf/nextcloud-autocurrency/compare/v$LAST_VERSION...v$VERSION)\n\n$chlg"
          chlg="<!--CHANGELOG-PLACEHOLDER-->\n$chlg"
          sed -i "s|<!--CHANGELOG-PLACEHOLDER-->|${chlg}|" CHANGELOG.md

      - name: Commit & Push
        run: |
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "chore(release): v${{ env.VERSION }}"

  release:
    name: Create Release

    runs-on: ubuntu-latest

    needs: [build, changelog]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Release Tag
        run: |
          LAST_VERSION=$(git tag --sort=version:refname | head -n 1)
          LAST_VERSION="${LAST_VERSION#v}"
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v}"
          echo VERSION=${VERSION} >> $GITHUB_ENV
          echo LAST_VERSION=${LAST_VERSION} >> $GITHUB_ENV

      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ github.ref_name }}
          body: |
            Auto Currency for Cospend Release ${{ env.VERSION }}

            ## Changelog

            ${{ steps.changelog.outputs.changelog }}

          draft: false
          prerelease: ${{ startsWith(github.ref_name, 'v') && (contains(github.ref, '-beta') || contains(github.ref, '-rc')) }}
          files: |
            autocurrency.tar.gz/autocurrency.tar.gz

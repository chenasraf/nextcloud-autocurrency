# This workflow is provided via the organization template repository
#
# https://github.com/nextcloud/.github
# https://docs.github.com/en/actions/learn-github-actions/sharing-workflows-with-your-organization

name: Release

on:
  push:
    branches: [master]

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: release-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  release-please:
    name: Release
    runs-on: ubuntu-latest

    outputs:
      release_created: ${{ steps.release.outputs.release_created }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download builds
        uses: actions/download-artifact@v4

      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

  artifacts:
    runs-on: ubuntu-latest
    name: Upload Release Artifacts
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release_created }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get php version
        id: versions
        uses: icewind1991/nextcloud-version-matrix@v1

      - name: Set up php${{ steps.versions.outputs.php-available }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ steps.versions.outputs.php-available }}
          extensions: bz2, ctype, curl, dom, fileinfo, gd, iconv, intl, json, libxml, mbstring, openssl, pcntl, posix, session, simplexml, xmlreader, xmlwriter, zip, zlib, sqlite, pdo_sqlite
          coverage: none
          ini-file: development
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build App
        run: |
          npm i -g pnpm
          cd ..
          mv nextcloud-autocurrency autocurrency
          cd autocurrency
          make && make appstore
          cd ..
          mv autocurrency nextcloud-autocurrency

      - name: Upload Release Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} build/artifacts/appstore/autocurrency.tar.gz
